/* Aula 12 Pseudoclasses e Pseudoelementos */

@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap');


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6, p, a{
    font-family: 'Roboto', sans-serif;
} 

header{
    background-color: #F0D290;
    width: 100%;
    position: fixed;
    top:0px;
    z-index: 1000;
    height: 30px;
    
}

.main-header nav ul {
    display: flex; 
    gap: 30px ; 
    list-style: none;  
    justify-content: center;
    align-items:center
}

.main-header ul li a {
    font-weight: 500;
    font-size: 20px;
    text-decoration: none;
    color: #781D42;
}

/* Pseudoclasses para links  */ 

/* Não etendi muito bem o que o link faz, ele deixa o link de uma configuração diferente*/

.google:link{
    background-color: red;
}

/* Ele muda para configuração passada quando colocamos o mouse em cima dele  */

.TT:hover{
    background-color: red;
}

/* Ele muda de cor depois que acessamos o link  */

.YT:visited{
    color: red;
}

/* Ele muda para a configuração informada, quando clicamos no link  */

.lk:active{
    color: red;
    background-color: royalblue;
}

/* Pseudoclasses para inputs  */

/* O elemento recebe foco, quando clica para preencher as inf. ele fica em destaque */

.um:focus{
    color: red;
    font-weight: bolder;
}

/* Desativa o campo  */

.tres:disabled{
    background-color: blue;

}

/* Não etendi muito bem como ele funciona, mas ele cria link no meu texto, e eu consigo destacar pedaços do texto */

p:target {
    background-color: gold;
  }
  
  /* Adicione o pseudo-elemento dentro do elemento alvo */
  p:target::before {
    font: 70% sans-serif;
    content: "►";
    color: limegreen;
    margin-right: .25em;
  }
  
  /* Estilize nos elementos em itálico dentro do elemento alvo  */
  p:target i {
    color: red;
  }

  /* Representa qualquer elemento ativado. */ 

  .quatro:enabled{
      color: blue;
      background-color: blueviolet;
  }

/* */ 

  q::before {
    content: "«";
    color: blue;
  }

 q::after {
    content: "»";
    color: red;
  }

  /* Outros pseudo-classes*/

  .quatro:invalid{
      background-color: red;
  }

